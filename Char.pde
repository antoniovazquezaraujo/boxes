/*
class CharMap{
	int[][] getMap(){
		
	}
}
class Font{
	CharMap getCharMap(char c){

	}
	Size getSize(){

	}
}
class Char extends Box{
	Font font;
	Char(Font font){

	}
}
*/
class Char extends Box {
	//[char][row][pixel]
	int font53[][][] = {
		{ //SPACE
			{0,0,0},
			{0,0,0},
			{0,0,0},
			{0,0,0},
			{0,0,0},
		} , 
		{ //DOT
			{0,0,0},
			{0,0,0},
			{0,0,0},
			{0,0,0},
			{0,1,0},
		} , 
		{ //COMMA
			{0,0,0},
			{0,0,0},
			{0,0,0},
			{0,1,0},
			{0,1,0},
		} , 
		{ //Ñ
			{1,1,0},
			{0,0,0},
			{1,1,1},
			{1,0,1},
			{1,0,1},
		} , 
		{ //0
			{1,1,1},
			{1,0,1},
			{1,0,1},
			{1,0,1},
			{1,1,1},
		} , 
		{ //1
			{0,1,0},
			{0,1,0},
			{0,1,0},
			{0,1,0},
			{0,1,0},
		} , 
		{ //2
			{1,1,1},
			{0,0,1},
			{1,1,1},
			{1,0,0},
			{1,1,1},
		} , 
		{ //3
			{1,1,1},
			{0,0,1},
			{0,1,1},
			{0,0,1},
			{1,1,1},
		} , 
		{ //4
			{1,0,1},
			{1,0,1},
			{1,1,1},
			{0,0,1},
			{0,0,1},
		} , 
		{ //0
			{1,1,1},
			{1,0,0},
			{1,1,1},
			{0,0,1},
			{1,1,1},
		} , 
		{ //6
			{1,1,1},
			{1,0,0},
			{1,1,1},
			{1,0,1},
			{1,1,1},
		} , 
		{ //7
			{1,1,1},
			{0,0,1},
			{0,0,1},
			{0,0,1},
			{0,0,1},
		} , 
		{ //8
			{1,1,1},
			{1,0,1},
			{1,1,1},
			{1,0,1},
			{1,1,1},
		} , 
		{ //9
			{1,1,1},
			{1,0,1},
			{1,1,1},
			{0,0,1},
			{1,1,1},
		},
		{ //A
			{0,1,0},
			{1,0,1},
			{1,1,1},
			{1,0,1},
			{1,0,1},
		} , 
		{ //B
			{1,1,0},
			{1,0,1},
			{1,1,0},
			{1,0,1},
			{1,1,0},
		} , 
		{ //C
			{0,1,1},
			{1,0,0},
			{1,0,0},
			{1,0,0},
			{0,1,1},
		} , 
		{ //D
			{1,1,0},
			{1,0,1},
			{1,0,1},
			{1,0,1},
			{1,1,0},
		} , 
		{ //E
			{1,1,1},
			{1,0,0},
			{1,1,0},
			{1,0,0},
			{1,1,1},
		} , 
		{ //F
			{1,1,1},
			{1,0,0},
			{1,1,0},
			{1,0,0},
			{1,0,0},
		} , 
		{ //G
			{1,1,1},
			{1,0,0},
			{1,1,1},
			{1,0,1},
			{1,1,1},
		} , 
		{ //H
			{1,0,1},
			{1,0,1},
			{1,1,1},
			{1,0,1},
			{1,0,1},
		} , 
		{ //I
			{0,1,0},
			{0,1,0},
			{0,1,0},
			{0,1,0},
			{0,1,0},
		} , 
		{ //J
			{0,0,1},
			{0,0,1},
			{0,0,1},
			{1,0,1},
			{1,1,1},
		} , 
		{ //K
			{1,0,1},
			{1,0,1},
			{1,1,0},
			{1,0,1},
			{1,0,1},
		} , 
		{ //L
			{1,0,0},
			{1,0,0},
			{1,0,0},
			{1,0,0},
			{1,1,1},
		} , 
		{ //M
			{1,0,1},
			{1,1,1},
			{1,0,1},
			{1,0,1},
			{1,0,1},
		} , 
		{ //N
			{1,1,0},
			{1,0,1},
			{1,0,1},
			{1,0,1},
			{1,0,1},
		} , 
		{ //O
			{1,1,1},
			{1,0,1},
			{1,0,1},
			{1,0,1},
			{1,1,1},
		} , 
		{ //P
			{1,1,1},
			{1,0,1},
			{1,1,1},
			{1,0,0},
			{1,0,0},
		} , 
		{ //Q
			{1,1,1},
			{1,0,1},
			{1,0,1},
			{1,0,1},
			{1,1,0},
		} , 
		{ //R
			{1,1,0},
			{1,0,1},
			{1,1,0},
			{1,0,1},
			{1,0,1},
		} , 
		{ //S
			{1,1,1},
			{1,0,0},
			{1,1,1},
			{0,0,1},
			{1,1,1},
		} , 
		{ //T
			{1,1,1},
			{0,1,0},
			{0,1,0},
			{0,1,0},
			{0,1,0},
		} , 
		{ //U
			{1,0,1},
			{1,0,1},
			{1,0,1},
			{1,0,1},
			{1,1,1},
		} , 
		{ //V
			{1,0,1},
			{1,0,1},
			{1,0,1},
			{1,0,1},
			{0,1,0},
		} ,
		{ //W
			{1,0,1},
			{1,0,1},
			{1,1,1},
			{1,1,1},
			{0,1,0},
		} , 
		{ //X
			{1,0,1},
			{1,1,1},
			{0,1,0},
			{1,1,1},
			{1,0,1},
		} , 
		{ //Y
			{1,0,1},
			{1,0,1},
			{0,1,0},
			{0,1,0},
			{0,1,0},
		} , 
		{ //Z
			{1,1,1},
			{0,0,1},
			{0,1,0},
			{1,0,0},
			{1,1,1},
		}   
	};
	int font55[][][] = {
		{ //SPACE
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,0,0,0},
		} , 
		{ //DOT
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,1,0,0,0},
		} , 
		{ //COMMA
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,0,0,0,0},
			{0,1,0,0,0},
			{0,1,0,0,0},
		} , 
		{ //Ñ
			{1,0,1,1,1},
			{1,1,0,0,0},
			{1,0,1,0,1},
			{1,0,0,1,1},
			{1,0,0,0,1},
		} , 
		{ //0
			{0,1,1,0,0},
			{1,0,0,1,0},
			{1,0,0,1,0},
			{1,0,0,1,0},
			{0,1,1,0,0},
		} , 
		{ //1
			{1,1,0,0,0},
			{0,1,0,0,0},
			{0,1,0,0,0},
			{0,1,0,0,0},
			{1,1,1,0,0},
		} , 
		{ //2
			{1,1,1,0,0},
			{0,0,0,1,0},
			{0,1,1,0,0},
			{1,0,0,0,0},
			{0,1,1,1,0},
		} , 
		{ //3
			{1,1,1,0,0},
			{0,0,0,1,0},
			{0,1,1,0,0},
			{0,0,0,1,0},
			{1,1,1,0,0},
		} , 
		{ //4
			{1,0,1,0,0},
			{1,0,1,0,0},
			{1,0,1,0,0},
			{1,1,1,1,0},
			{0,0,1,0,0},
		} , 
		{ //0
			{1,1,1,1,0},
			{1,0,0,0,0},
			{1,1,1,0,0},
			{0,0,0,1,0},
			{1,1,1,0,0},
		} , 
		{ //6
			{0,1,1,0,0},
			{1,0,0,0,0},
			{1,1,1,0,0},
			{1,0,0,1,0},
			{0,1,1,0,0},
		} , 
		{ //7
			{1,1,1,1,0},
			{0,0,0,1,0},
			{0,0,1,0,0},
			{0,1,0,0,0},
			{0,1,0,0,0},
		} , 
		{ //8
			{0,1,1,0,0},
			{1,0,0,1,0},
			{0,1,1,0,0},
			{1,0,0,1,0},
			{0,1,1,0,0},
		} , 
		{ //9
			{0,1,1,0,0},
			{1,0,0,1,0},
			{0,1,1,1,0},
			{0,0,0,1,0},
			{0,1,1,0,0},
		},
		{ //A
			{0,1,1,0,0},
			{1,0,0,1,0},
			{1,1,1,1,0},
			{1,0,0,1,0},
			{1,0,0,1,0},
		} , 
		{ //B
			{1,1,1,0,0},
			{1,0,0,1,0},
			{1,1,1,0,0},
			{1,0,0,1,0},
			{1,1,1,0,0},
		} , 
		{ //C
			{0,1,1,0,0},
			{1,0,0,1,0},
			{1,0,0,0,0},
			{1,0,0,1,0},
			{0,1,1,0,0},
		} , 
		{ //D
			{1,1,1,0,0},
			{1,0,0,1,0},
			{1,0,0,1,0},
			{1,0,0,1,0},
			{1,1,1,0,0},
		} , 
		{ //E
			{1,1,1,0,0},
			{1,0,0,0,0},
			{1,1,1,0,0},
			{1,0,0,0,0},
			{1,1,1,0,0},
		} , 
		{ //F
			{1,1,1,0,0},
			{1,0,0,0,0},
			{1,1,1,0,0},
			{1,0,0,0,0},
			{1,0,0,0,0},
		} , 
		{ //G
			{0,1,1,1,0},
			{1,0,0,0,0},
			{1,0,1,1,0},
			{1,0,0,1,0},
			{0,1,1,0,0},
		} , 
		{ //H
			{1,0,0,1,0},
			{1,0,0,1,0},
			{1,1,1,1,0},
			{1,0,0,1,0},
			{1,0,0,1,0},
		} , 
		{ //I
			{0,1,0,0,0},
			{0,1,0,0,0},
			{0,1,0,0,0},
			{0,1,0,0,0},
			{0,1,0,0,0},
		} , 
		{ //J
			{0,0,0,1,0},
			{0,0,0,1,0},
			{0,0,0,1,0},
			{1,0,0,1,0},
			{0,1,1,0,0},
		} , 
		{ //K
			{1,0,0,1,0},
			{1,0,1,0,0},
			{1,1,0,0,0},
			{1,0,1,0,0},
			{1,0,0,1,0},
		} , 
		{ //L
			{1,0,0,0,0},
			{1,0,0,0,0},
			{1,0,0,0,0},
			{1,0,0,0,0},
			{1,1,1,0,0},
		} , 
		{ //M
			{1,0,0,0,1},
			{1,1,0,1,1},
			{1,0,1,0,1},
			{1,0,0,0,1},
			{1,0,0,0,1},
		} , 
		{ //N
			{1,0,0,0,1},
			{1,1,0,0,1},
			{1,0,1,0,1},
			{1,0,0,1,1},
			{1,0,0,0,1},
		} , 
		{ //O
			{0,1,1,0,0},
			{1,0,0,1,0},
			{1,0,0,1,0},
			{1,0,0,1,0},
			{0,1,1,0,0},
		} , 
		{ //P
			{1,1,1,0,0},
			{1,0,0,1,0},
			{1,1,1,0,0},
			{1,0,0,0,0},
			{1,0,0,0,0},
		} , 
		{ //Q
			{0,1,1,0,0},
			{1,0,0,1,0},
			{1,0,0,1,0},
			{1,0,1,1,0},
			{0,1,1,1,0},
		} , 
		{ //R
			{1,1,1,0,0},
			{1,0,0,1,0},
			{1,1,1,0,0},
			{1,0,1,0,0},
			{1,0,0,1,0},
		} , 
		{ //S
			{0,1,1,1,0},
			{1,0,0,0,0},
			{0,1,1,0,0},
			{0,0,0,1,0},
			{1,1,1,0,0},
		} , 
		{ //T
			{1,1,1,0,0},
			{0,1,0,0,0},
			{0,1,0,0,0},
			{0,1,0,0,0},
			{0,1,0,0,0},
		} , 
		{ //U
			{1,0,0,1,0},
			{1,0,0,1,0},
			{1,0,0,1,0},
			{1,0,0,1,0},
			{0,1,1,0,0},
		} , 
		{ //V
			{1,0,0,0,1},
			{1,0,0,0,1},
			{0,1,0,1,0},
			{0,1,0,1,0},
			{0,0,1,0,0},
		} ,
		{ //W
			{1,0,0,0,1},
			{1,0,1,0,1},
			{1,0,1,0,1},
			{1,0,1,0,1},
			{0,1,0,1,0},
		} , 
		{ //X
			{1,0,0,0,1},
			{0,1,0,1,0},
			{0,0,1,0,0},
			{0,1,0,1,0},
			{1,0,0,0,1},
		} , 
		{ //Y
			{1,0,0,0,1},
			{0,1,0,1,0},
			{0,0,1,0,0},
			{0,0,1,0,0},
			{0,0,1,0,0},
		} , 
		{ //Z
			{1,1,1,0,0},
			{0,0,1,0,0},
			{0,1,0,0,0},
			{1,0,0,0,0},
			{1,1,1,0,0},
		}   
	};
	int font33[][][] = {
		{ //SPACE
			{0,0,0},
			{0,0,0},
			{0,0,0}
		} , 
		{ //DOT
			{0,0,0},
			{0,0,0},
			{0,1,0}
		} , 
		{ //COMMA
			{0,0,0},
			{0,1,0},
			{0,1,0}
		} , 
		{//Ñ
			{1,1,1}, 
			{1,0,1}, 
			{1,0,1}
		} , 
		{ //0
			{1,1,1},
			{1,0,1},
			{1,1,1}
		} , 
		{ //1
			{0,1,0},
			{0,1,0},
			{0,1,0}
		} , 
		{ //2
			{1,1,0},
			{0,1,0},
			{0,1,1}
		} , 
		{ //3
			{1,1,1},
			{0,1,1},
			{1,1,1}
		} , 
		{ //4
			{1,0,1},
			{1,1,1},
			{0,0,1}
		} , 
		{ //5
			{0,1,1},
			{0,1,0},
			{1,1,0}
		} , 
		{ //6
			{1,0,0},
			{1,1,1},
			{1,1,1}
		} , 
		{ //7
			{1,1,1},
			{0,0,1},
			{0,0,1}
		} , 
		{ //8
			{0,1,0},
			{1,1,1},
			{1,1,1}
		} , 
		{ //9
			{1,1,1},
			{1,1,1},
			{0,0,1}
		},
		{ //A
			{0,1,0}, 
			{1,1,1}, 
			{1,0,1}
		} , 
		{//B
			{1,1,0}, 
			{1,1,1}, 
			{1,1,1}
		} , 
		{//C
			{1,1,1}, 
			{1,0,0}, 
			{1,1,1}
		} , 
		{//D
			{1,1,0}, 
			{1,0,1}, 
			{1,1,0}
		} , 
		{ //E
			{1,1,1}, 
			{1,1,0}, 
			{1,1,1}
		} , 
		{//F
			{1,1,1}, 
			{1,1,0}, 
			{1,0,0}
		} , 
		{//G
			{1,1,0}, 
			{1,0,1}, 
			{1,1,1}
		} , 
		{//H
			{1,0,1}, 
			{1,1,1}, 
			{1,0,1}
		} , 
		{//I
			{0,1,0}, 
			{0,1,0}, 
			{0,1,0}
		} , 
		{//J
			{0,0,1}, 
			{1,0,1}, 
			{1,1,1}
		} , 
		{//K
			{1,0,1}, 
			{1,1,0}, 
			{1,0,1}
		} , 
		{//L
			{1,0,0}, 
			{1,0,0}, 
			{1,1,1}
		} , 
		{//M
			{1,1,1}, 
			{1,1,1}, 
			{1,0,1}
		} , 
		{//N
			{1,1,0}, 
			{1,0,1}, 
			{1,0,1}
		} , 
		{//O
			{1,1,1}, 
			{1,0,1}, 
			{1,1,1}
		} , 
		{//P
			{1,1,1}, 
			{1,1,1}, 
			{1,0,0}
		} , 
		{//Q
			{1,1,1}, 
			{1,1,1}, 
			{0,0,1}
		} , 
		{//R
			{1,1,1}, 
			{1,0,0}, 
			{1,0,0}
		} , 
		{//S
			{0,1,1}, 
			{0,1,0}, 
			{1,1,0}
		} , 
		{//T
			{1,1,1}, 
			{0,1,0}, 
			{0,1,0}
		} , 
		{//U
			{1,0,1}, 
			{1,0,1}, 
			{1,1,1}
		} , 
		{//V
			{1,0,1}, 
			{1,0,1}, 
			{0,1,0}
		} , 
		{//W
			{1,0,1}, 
			{1,1,1}, 
			{1,1,1}
		} , 
		{//X
			{1,0,1}, 
			{0,1,0}, 
			{1,0,1}
		} , 
		{//Y
			{1,0,1}, 
			{0,1,0}, 
			{0,1,0}
		} , 
		{//Z
			{1,1,0}, 
			{0,1,0}, 
			{0,1,1}
		} 
	};
	char c;
	color fontColor;
	int font[][][];
	int[][]map;
	Char(){
		this(0,0);
	}
	Char(int x, int y){
		this(new Point(x,y), new Size(4,6), color(0,0,0));
	}
	Char(Point location, Size size, color fontColor) {
		super(location, size);
		this.font = font53;
		rect.h =font[0].length;
		rect.w =font[0][0].length+1;
		this.fontColor = fontColor;
		this.fillColor = color(255,255,255);
		setChar(' ');
	}
	void setChar(char c) {
		this.c = c;
		this.map = getCharMap();
	}
	void setNumber(int n){
		setChar(char('0'+n));
	}
	char getChar() {
		return c;
	}
	int [][] getCharMap() {
		switch(c){
			case ' ': return font[0];  
			case '.': return font[1];  
			case ',': return font[2];  
			case 'Ñ': return font[3];  
		}
		if(Character.isDigit(c)){
			return font[4+(c-'0')];
		}else{
			return font[14+ (c - 'A')];
		}
	}
	void draw(GraphicContext context) {
		context.setColor(fillColor);
		context.paintBox(rect.w, rect.h);
		context.setColor(fontColor);
		int numCols =font[0][0].length;
		int numRows =font[0].length;
		for (int col=0; col<numCols; col++) {
			for (int row=0; row<numRows; row++) {
				if (map[row][col] == 1) {
					context.paintPixel(col, row);
				}
			}
		}
	}
}

